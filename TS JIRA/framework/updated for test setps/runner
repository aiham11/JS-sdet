import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.List;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import com.google.gson.JsonObject;

public class RunnerClass {

    // Logger Initialization for Runner Class
    private static final Logger logger = LogManager.getLogger();

    // Main method
    public static void main(String[] args) throws MalformedURLException, IOException, URISyntaxException {
        
        /* Main method calls below functionalities from com.optum.coe.automation.rally package
         * 1. Get Jira non migrated testcase keys 
         * 2. Get Jira Testcase details for the given testcase key. It is an iterative process
         * 3. Create the testcase in Rally using the Jira testcase details
         * 4. Validate if the testcase is created successfully ; Future implementation is required. US7440061*/
                
        JiraTestCase jiraTestCase = new JiraTestCase();
        JiraOperation jiraOperation = new JiraOperation();
        ArrayList<String> testcaseKeys = jiraOperation.getJiraNonMigratedTestcaseKeys();
        for (int i = 0 ; i < testcaseKeys.size() ; i++) {
            jiraTestCase.setKey(testcaseKeys.get(i));
            logger.info("Processing " + jiraTestCase.getKey());
            JsonObject jiraTestcaseJson = jiraOperation.getJiraTestCaseDetails(jiraTestCase.getKey());
            RallyOperation rallyOperation = new RallyOperation();
            boolean rallyTestcaseCreationStatus = rallyOperation.createRallyTestcase(jiraTestcaseJson);
            
            if (rallyTestcaseCreationStatus) {
                logger.info("Rally Testcase Creation Status is true" );
                // Retrieve test steps from Jira and create them in Rally
                List<String> testSteps = jiraOperation.getJiraTestSteps(jiraTestCase.getKey());
                if (testSteps != null && !testSteps.isEmpty()) {
                    String testCaseRef = rallyOperation.getTestCaseRef(jiraTestcaseJson);
                    boolean rallyTestStepsCreationStatus = rallyOperation.createRallyTestSteps(testCaseRef, testSteps);
                    if (rallyTestStepsCreationStatus) {
                        logger.info("Test steps created successfully in Rally for test case: " + jiraTestCase.getKey());
                    } else {
                        logger.error("Failed to create test steps in Rally for test case: " + jiraTestCase.getKey());
                    }
                }
                // Call the method to update the TestCase Migrated in Jira to "true". this method should go to Utils.Java Class
                //Utils.updateTestCaseMigratedStatusinJira(true); // Yet to be implemented - US7382197
            
            } else { 
                logger.error("The Jira testcase is not created in rally. Jira Testcase key is " + jiraTestCase.getKey() + " is not created in rally");
                return;
            }
        }
    }
}
