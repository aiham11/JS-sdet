package com.optum.coe.automation.rally;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Base64;
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import com.google.gson.JsonObject;
import com.rallydev.rest.RallyRestApi;

public class Utils {
    private static final Logger logger = LogManager.getLogger();

    public static HttpEntity getJiraResponse(String url, String apiKey) {
        HttpEntity entity = null;
        CloseableHttpClient httpClient = HttpClients.createDefault();
        HttpGet request = new HttpGet(url);
        request.setHeader("Authorization", "Bearer " + apiKey);
        try (CloseableHttpResponse response = httpClient.execute(request)) {
            entity = response.getEntity();
            logger.info("Successfully returned HttpEntity response");
        } catch (IOException e) {
            logger.error("Error occurred while getting response from JIRA ", e);
        }
        return entity;
    }

    public static String encodeFileToBase64(File file) throws IOException {
        try (FileInputStream fileInputStreamReader = new FileInputStream(file)) {
            byte[] bytes = new byte[(int) file.length()];
            fileInputStreamReader.read(bytes);
            return Base64.getEncoder().encodeToString(bytes);
        }
    }

    public static JsonObject findOrCreateTag(RallyRestApi restApi, String tagName) throws IOException {
        // Implement the logic to find or create a tag in Rally
        // This is a placeholder for the actual implementation
        return new JsonObject();
    }

    public static JsonObject createTestFolder(String[] folderHierarchy, String rallyProjectKey, String rallyBaseURL, String rallyApiKey) {
        // Implement the logic to create a test folder in Rally
        // This is a placeholder for the actual implementation
        return new JsonObject();
    }

    public static void updateTestCaseMigratedStatusInJira(String key, boolean status) {
        // Implement the logic to update the test case status in JIRA
        // This is a placeholder for the actual implementation
    }
}
