package com.optum.coe.automation.rally;

import org.apache.http.HttpEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;

import java.io.IOException;
import java.util.Base64;

public class Utils {

    public static HttpEntity getJiraResponse(String url, String apiKey) {
        HttpEntity entity = null;
        try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
            HttpGet request = new HttpGet(url);
            request.addHeader("Authorization", "Basic " + Base64.getEncoder().encodeToString(apiKey.getBytes()));
            try (CloseableHttpResponse response = httpClient.execute(request)) {
                entity = response.getEntity();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return entity;
    }

    public static String encodeFileToBase64(File file) throws IOException {
        byte[] fileContent = java.nio.file.Files.readAllBytes(file.toPath());
        return Base64.getEncoder().encodeToString(fileContent);
    }
}
