import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.rallydev.rest.RallyRestApi;
import com.rallydev.rest.request.CreateRequest;
import com.rallydev.rest.response.CreateResponse;

import java.net.URI;

public class CreateTestCase {

    public static void main(String[] args) throws Exception {
        JsonObject jiraJson = new JsonObject(); // Assuming jiraJson is already populated
        JsonObject rallyJson = new JsonObject();
        JsonObject testCase = new JsonObject();

        testCase.addProperty("Owner", "/user/775698509283"); // Assuming a default value
        testCase.addProperty("Ready", jiraJson.get("status").getAsString().equals("Ready"));

        // Add Tags
        JsonArray tagsArray = new JsonArray();
        JsonObject tagObject = new JsonObject();
        tagObject.addProperty("_ref", "/tag/56011614555");
        tagObject.addProperty("Name", "Billing and Eligibility");
        tagsArray.add(tagObject);
        testCase.add("Tags", tagsArray);

        // Add TestFolder
        JsonObject testFolder = new JsonObject();
        testFolder.addProperty("_ref", "/testfolder/790320784037");
        rallyJson.add("TestFolder", testFolder);

        // Add the testCase object to the rallyJson
        rallyJson.add("testCase", testCase);

        // Save the transformed JSON to a variable
        String rallyJsonString = new GsonBuilder().setPrettyPrinting().create().toJson(rallyJson);

        // Print the transformed JSON string
        System.out.println("Transformed JSON: " + rallyJsonString);

        // Now you can use the rallyJsonString in a different class as needed
        RallyJsonObj rallyJsonObj = new RallyJsonObj();

        JsonObject jsonData = JsonParser.parseString(rallyJsonString).getAsJsonObject();

        String rallyURL = "https://rally1.rallydev.com";
        String apiKey = "_UWk01XQOyRPk2ctMLiR9PAM1nBE6spnDEmSj1pk";  // replace with your API Key
        String projectRef = "789325818991";  // replace with your project reference

        // Initialize Rally API
        RallyRestApi restApi = new RallyRestApi(new URI(rallyURL), apiKey);
        restApi.setApplicationName("CreateTestCaseApp");

        // Extract values from JSON:
        JsonObject testCaseData = jsonData.getAsJsonObject("testCase");

        JsonObject testFolderData = null;
        JsonElement testFolderElement = jsonData.get("TestFolder");
        if (testFolderElement != null && testFolderElement.isJsonObject()) {
            testFolderData = testFolderElement.getAsJsonObject();
        } else {
            System.out.println("Error: TestFolder data not found in JSON.");
            restApi.close();
            return;
        }

        try {
            // Create a new test case
            JsonObject newTestCase = new JsonObject();
            newTestCase.addProperty("Name", testCaseData.get("Name").getAsString());
            newTestCase.addProperty("Project", projectRef);
            newTestCase.addProperty("Method", testCaseData.get("Method").getAsString());
            newTestCase.addProperty("Priority", testCaseData.get("Priority").getAsString());
            newTestCase.addProperty("Owner", testCaseData.get("Owner").getAsString());
            newTestCase.addProperty("Ready", testCaseData.get("Ready").getAsBoolean());

            // Add Tags to the test case from the JSON file
            JsonArray newTagsArray = new JsonArray();
            JsonArray tagsArrayFromJson = testCaseData.getAsJsonArray("Tags");
            if (tagsArrayFromJson != null) {
                for (JsonElement tagElement : tagsArrayFromJson) {
                    JsonObject tagObjectFromJson = tagElement.getAsJsonObject();
                    String tagRef = tagObjectFromJson.get("_ref").getAsString();
                    JsonObject newTagObject = new JsonObject();
                    newTagObject.addProperty("_ref", tagRef);
                    newTagsArray.add(newTagObject);
                }
                newTestCase.add("Tags", newTagsArray);
            }

            // Add TestFolder to the test case from the JSON file
            String testFolderRef = testFolderData.get("_ref").getAsString();
            newTestCase.addProperty("TestFolder", testFolderRef);

            CreateRequest createRequest = new CreateRequest("testcase", newTestCase);
            CreateResponse createResponse = restApi.create(createRequest);

            if (createResponse.wasSuccessful()) {
                System.out.println("Successfully created test case: " + createResponse.getObject().get("_ref").getAsString());
            } else {
                System.out.println("Error occurred creating test case:");
                for (String error : createResponse.getErrors()) {
                    System.out.println(error);
                }
            }
        } finally {
            // Release resources
            restApi.close();
        }
    }
}
