public void migrateTestStepsWithAttachments(String rallyTestCaseOID, List<JiraTestStep> jiraTestSteps, RallyRestApi rallyApi, Map<Integer, List<String>> embeddedAttachmentsMap) {
    Set<String> processedAttachments = new HashSet<>();

    for (JiraTestStep jiraTestStep : jiraTestSteps) {
        try {
            JsonObject newTestStep = new JsonObject();
            newTestStep.addProperty("TestCase", rallyTestCaseOID);
            newTestStep.addProperty("StepIndex", jiraTestStep.getIndex() + 1);  // Adjust the index to start from 1
            
            // Combine "Step" and "Test Data" fields into the "Input" field in Rally, but exclude embedded attachments
            String inputField = (jiraTestStep.getStep() != null ? jiraTestStep.getStep() : "") +
                                (jiraTestStep.getTestData() != null ? "\n" + jiraTestStep.getTestData() : "");
            newTestStep.addProperty("Input", inputField);
            
            // Map "Expected Result" field from Jira directly to Rally's "Expected Result", but exclude embedded attachments
            newTestStep.addProperty("ExpectedResult", jiraTestStep.getExpectedResult());

            // Handle non-embedded attachments specific to this test step
            List<String> stepEmbeddedAttachments = embeddedAttachmentsMap.get(jiraTestStep.getIndex());
            if (stepEmbeddedAttachments != null && !stepEmbeddedAttachments.isEmpty()) {
                for (String embeddedPath : stepEmbeddedAttachments) {
                    if (!processedAttachments.contains(embeddedPath)) {
                        // Exclude any direct embedding in the step creation
                        String attachmentURL = attachFileToRallyTestCase(rallyApi, rallyTestCaseOID, embeddedPath);
                        String attachmentOID = extractOID(attachmentURL);
                        if (attachmentOID != null) {
                            processedAttachments.add(embeddedPath);  // Mark this attachment as processed
                        }
                    }
                }
            }

            CreateRequest createRequest = new CreateRequest("TestcaseStep", newTestStep);
            CreateResponse createResponse = rallyApi.create(createRequest);

            if (createResponse.wasSuccessful()) {
                String testStepURL = createResponse.getObject().get("_ref").getAsString();
                String testStepOID = extractOID(testStepURL);
                logger.info("Successfully created test step in Rally with OID: " + testStepOID + " for TestCase: " + rallyTestCaseOID);
            } else {
                logger.error("Failed to create test step in Rally: " + createResponse.getErrors());
            }
        } catch (IOException e) {
            logger.error("Exception occurred while creating test step in Rally", e);
        }
    }
}
