public static JsonObject createTestFolder(String[] folderHierarchy, String projectRef, String rallyBaseUrl, String rallyApiKey) {
    JsonObject lastFolder = null;
    String lastFolderRef = null;

    RallyRestApi restApi = null;
    try {
        restApi = new RallyRestApi(new URI(rallyBaseUrl), rallyApiKey);
        restApi.setApplicationName("CreateTestCaseApp");

        for (int i = 0; i < folderHierarchy.length; i++) {
            String folderName = folderHierarchy[i];
            if (folderName == null || folderName.trim().isEmpty()) {
                logger.info("Invalid folder name encountered: '" + folderName + "'");
                continue;
            }

            // Query to check folder existence within the project and under the correct parent
            QueryRequest folderExistenceRequest = new QueryRequest("testfolder");

            if (i == 0) {
                // Check if it's a top-level folder (no parent)
                folderExistenceRequest.setQueryFilter(new QueryFilter("Name", "=", folderName.trim())
                        .and(new QueryFilter("Parent", "=", "null"))
                        .and(new QueryFilter("Project", "=", projectRef)));
            } else {
                // Check if it's a subfolder (with a parent)
                folderExistenceRequest.setQueryFilter(new QueryFilter("Name", "=", folderName.trim())
                        .and(new QueryFilter("Parent", "=", lastFolderRef))
                        .and(new QueryFilter("Project", "=", projectRef)));
            }

            folderExistenceRequest.setFetch(new Fetch("_ref", "Name", "Parent", "Project"));
            QueryResponse folderQueryResponse = restApi.query(folderExistenceRequest);

            if (folderQueryResponse.wasSuccessful() && folderQueryResponse.getTotalResultCount() > 0) {
                // Folder already exists, no need to create it
                lastFolder = folderQueryResponse.getResults().get(0).getAsJsonObject();
                lastFolderRef = lastFolder.get("_ref").getAsString();
                logger.info("Folder already exists in project: " + lastFolderRef);
            } else {
                // Folder does not exist, create it under the current project and parent
                JsonObject newFolder = new JsonObject();
                newFolder.addProperty("Name", folderName.trim());
                newFolder.addProperty("Project", projectRef);

                if (i != 0) {
                    newFolder.addProperty("Parent", lastFolderRef); // For subfolders, set the parent
                }

                CreateRequest createFolderRequest = new CreateRequest("testfolder", newFolder);
                CreateResponse createFolderResponse = restApi.create(createFolderRequest);

                if (createFolderResponse.wasSuccessful()) {
                    lastFolderRef = createFolderResponse.getObject().get("_ref").getAsString();
                    newFolder.addProperty("_ref", lastFolderRef);
                    lastFolder = newFolder;
                    logger.info("Successfully created folder in project: " + lastFolderRef);
                } else {
                    logger.error("Error occurred while creating folder.");
                    for (String error : createFolderResponse.getErrors()) {
                        System.out.println(error);
                    }
                    break;
                }
            }
        }

        return lastFolder;

    } catch (Exception e) {
        logger.error("Exception occurred while creating test folder structure in Rally.", e);
        return null;
    } finally {
        if (restApi != null) {
            try {
                restApi.close();
            } catch (Exception e) {
                logger.error("Exception occurred while closing Rally API resource.", e);
            }
        }
    }
}
