public List<JiraTestStep> getTestStepsForTestCase(String testCaseKey) {
    List<JiraTestStep> testSteps = new ArrayList<>();

    try {
        // Construct the URL to retrieve the test case details, including test steps
        String urlString = jiraBaseURL + "/rest/atm/1.0/testcase/" + testCaseKey;
        HttpURLConnection connection = (HttpURLConnection) new URL(urlString).openConnection();
        connection.setRequestMethod("GET");
        connection.setRequestProperty("Authorization", "Bearer " + jiraApiKey);
        connection.setRequestProperty("Content-Type", "application/json");

        int responseCode = connection.getResponseCode();
        if (responseCode == HttpURLConnection.HTTP_OK) {
            BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            StringBuilder response = new StringBuilder();
            String inputLine;
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            in.close();

            JSONObject jiraTestCase = new JSONObject(response.toString());
            JSONArray stepsArray = jiraTestCase.getJSONObject("testScript").getJSONArray("steps");

            for (int i = 0; i < stepsArray.length(); i++) {
                JSONObject stepObject = stepsArray.getJSONObject(i);

                JiraTestStep testStep = new JiraTestStep();
                testStep.setId(stepObject.getInt("id"));
                testStep.setDescription(stepObject.getString("description"));
                testStep.setExpectedResult(stepObject.getString("expectedResult"));
                testStep.setIndex(stepObject.getInt("index"));
                testStep.setTestData(stepObject.optString("testData", ""));

                // Retrieve attachments if available
                if (stepObject.has("attachments")) {
                    JSONArray attachmentsArray = stepObject.getJSONArray("attachments");
                    List<JiraAttachment> attachments = new ArrayList<>();
                    for (int j = 0; j < attachmentsArray.length(); j++) {
                        JSONObject attachmentObject = attachmentsArray.getJSONObject(j);
                        JiraAttachment attachment = new JiraAttachment(
                            attachmentObject.getString("id"),
                            attachmentObject.getString("name"),
                            jiraBaseURL + "/rest/atm/1.0/attachment/" + attachmentObject.getInt("id")
                        );
                        attachments.add(attachment);
                    }
                    testStep.setAttachments(attachments);
                }

                testSteps.add(testStep);
            }
        } else {
            logger.error("GET request to Jira failed with response code: " + responseCode);
        }
    } catch (Exception e) {
        logger.error("Exception occurred while retrieving test steps for Jira test case: " + testCaseKey, e);
    }

    return testSteps;
}
