private static void migrateTestStepAttachments(JsonObject jiraJson, RallyRestApi restApi, String testCaseRef, String baseUrl, String authToken) throws IOException {
    // Ensure the Attachments folder exists
    File attachmentFolder = new File("Attachments");
    if (!attachmentFolder.exists()) {
        attachmentFolder.mkdir();
    }

    JsonObject testScript = jiraJson.getAsJsonObject("testScript");
    if (testScript != null) {
        JsonArray steps = testScript.getAsJsonArray("steps");
        if (steps != null) {
            for (JsonElement stepElement : steps) {
                JsonObject step = stepElement.getAsJsonObject();

                // Handle embedded attachments (images, etc.)
                String description = "";
                if (step.has("description") && !step.get("description").isJsonNull()) {
                    description = step.get("description").getAsString();
                }
                List<File> downloadedAttachments = downloadEmbeddedAttachments(description, baseUrl, authToken);

                // Handle file attachments (if any)
                JsonArray attachmentArray = step.getAsJsonArray("attachments");
                if (attachmentArray != null) {
                    for (JsonElement attachmentElement : attachmentArray) {
                        JsonObject attachmentObj = attachmentElement.getAsJsonObject();
                        String fileUrl = attachmentObj.has("content") ? attachmentObj.get("content").getAsString() : "";
                        String fileName = attachmentObj.has("filename") ? attachmentObj.get("filename").getAsString() : "";

                        if (!fileUrl.isEmpty() && !fileName.isEmpty()) {
                            // Download the attachment
                            File file = downloadFile(baseUrl, fileUrl, fileName, authToken);
                            downloadedAttachments.add(file);
                        }
                    }
                }

                // Upload attachments to Rally test case level
                for (File file : downloadedAttachments) {
                    // Step 1: Upload the attachment to the test case level
                    String attachmentRef = uploadAttachmentToRally(file, restApi, testCaseRef);

                    // Step 2: Link this attachment to the specific test step
                    if (attachmentRef != null) {
                        linkAttachmentToTestStep(restApi, testCaseRef, step.get("index").getAsInt(), attachmentRef);
                    }

                    // Cleanup - delete the file after uploading
                    if (file.exists()) {
                        file.delete();
                    }
                }
            }
        }
    }
}
