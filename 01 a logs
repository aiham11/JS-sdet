public class JiraOperation {
    // Existing fields and methods...

    // Constructor
    public JiraOperation() {
        jiraBaseURL = ConfigLoader.getConfigValue("JIRA_BASE_URL");
        jiraApiKey = ConfigLoader.getConfigValue("JIRA_API_TOKEN");
        jiraProjectKey = ConfigLoader.getConfigValue("JIRA_PROJECT_KEY");
        max_chunk = ConfigLoader.getConfigValue("MAX_VALUE_CHUNK");
        tcFileAttachmentDownloadLocation = ConfigLoader.getConfigValue("TEST_CASE_FILE_ATTACHMENT_LOCATION");
        tsFileAttachmentDownloadLocation = ConfigLoader.getConfigValue("TEST_STEP_FILE_ATTACHMENT_LOCATION");
        logger.info("Jira values for the project key " + jiraProjectKey + " are assigned from rally_migration_config.properties file");
        logger.log(Level.getLevel("VERBOSE"),
            "Below are the values assigned from rally_migration_config.properties file. \nJira Base URL - "
            + jiraBaseURL + "\nJira Project Key " + jiraProjectKey + "\nMax Chunk value - " + max_chunk
            + "\nTest Case File Attachment Download location - " + tcFileAttachmentDownloadLocation
            + "\nTest Step File Attachment location - " + tsFileAttachmentDownloadLocation);
    }

    // Method to fetch non-migrated test cases from Jira
    public String fetchJiraNonMigratedTestcases(String jiraApiEndpoint, String jiraApiToken) {
        HttpEntity response = Utils.getJiraResponse(jiraApiEndpoint, jiraApiToken);
        if (response != null) {
            try {
                return EntityUtils.toString(response);
            } catch (ParseException | IOException e) {
                logger.error("Error while parsing the Json response ", e);
            }
        } else {
            logger.error("Failed to fetch non-migrated test cases from Jira.");
        }
        return null;
    }

    // Method to get non-migrated Jira testcase keys from the response
    public List<String> getJiraNonMigratedTestcaseKeys(String jiraResponse) {
        List<String> testCaseKeys = new ArrayList<>();
        if (jiraResponse != null && !jiraResponse.trim().isEmpty()) {
            JSONArray jsonArray = new JSONArray(jiraResponse);
            for (int i = 0; i < jsonArray.length(); i++) {
                JSONObject jsonObject = jsonArray.getJSONObject(i);
                String key = jsonObject.getString("key");
                logger.info("Key retrieved: " + jsonObject.getString("key"));
                testCaseKeys.add(key);
            }
        } else {
            logger.error("Jira response is null or empty. Cannot extract test case keys.");
        }
        return testCaseKeys;
    }

    // Existing methods like getJiraTestCaseDetails, jiraAttachmentsDownload, etc.

}
