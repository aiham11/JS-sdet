private static void migrateTestSteps(JsonObject jiraJson, RallyRestApi restApi, String testCaseRef) throws IOException {
    // Get test steps from Jira response
    JsonObject testScript = jiraJson.getAsJsonObject("testScript");
    if (testScript != null) {
        JsonArray steps = testScript.getAsJsonArray("steps");
        if (steps != null) {
            List<JsonObject> stepList = new ArrayList<>();
            for (JsonElement stepElement : steps) {
                JsonObject step = stepElement.getAsJsonObject();
                JsonObject rallyStep = new JsonObject();

                rallyStep.addProperty("TestCase", testCaseRef);
                rallyStep.addProperty("StepIndex", step.get("index").getAsInt());

                // Migrate the description without embedded images
                JsonElement descriptionElement = step.get("description");
                String description = (descriptionElement != null && !descriptionElement.isJsonNull()) ? descriptionElement.getAsString() : "";
                description = removeEmbeddedImages(description);
                rallyStep.addProperty("Input", description);

                // Migrate the expected result without embedded images
                JsonElement expectedResultElement = step.get("expectedResult");
                String expectedResult = (expectedResultElement != null && !expectedResultElement.isJsonNull()) ? expectedResultElement.getAsString() : "";
                expectedResult = removeEmbeddedImages(expectedResult);
                rallyStep.addProperty("ExpectedResult", expectedResult);

                // Migrate the test data
                JsonElement testDataElement = step.get("testData");
                String testData = (testDataElement != null && !testDataElement.isJsonNull()) ? testDataElement.getAsString() : "";
                rallyStep.addProperty("ValidationInput", testData);

                stepList.add(rallyStep);
            }

            // Sort steps by StepIndex to ensure correct order
            stepList.sort((step1, step2) -> step1.get("StepIndex").getAsInt() - step2.get("StepIndex").getAsInt());

            // Create each step in Rally
            for (JsonObject rallyStep : stepList) {
                CreateRequest createStepRequest = new CreateRequest("testcasestep", rallyStep);
                CreateResponse createStepResponse = restApi.create(createStepRequest);

                if (createStepResponse.wasSuccessful()) {
                    System.out.println("Successfully created test step: " + rallyStep.get("StepIndex").getAsInt());
                } else {
                    System.out.println("Error occurred creating test step:");
                    for (String error : createStepResponse.getErrors()) {
                        System.out.println(error);
                    }
                }
            }
        }
    }
}
