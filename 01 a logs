public class RallyOperation {
    // Other existing methods and fields...

    // Method to attach a file to a Rally object (can be a test step, test case, etc.)
    private String attachFile(RallyRestApi rallyApi, String rallyObjectRef, String filePath, String attachmentType) throws IOException {
        File file = new File(filePath);
        if (!file.exists()) {
            logger.error("File not found: " + filePath);
            return null;
        }

        String base64EncodedContent = Base64.getEncoder().encodeToString(Files.readAllBytes(file.toPath()));

        JsonObject attachmentContent = new JsonObject();
        attachmentContent.addProperty("Content", base64EncodedContent);
        CreateRequest attachmentContentRequest = new CreateRequest("AttachmentContent", attachmentContent);
        CreateResponse attachmentContentResponse = rallyApi.create(attachmentContentRequest);
        String attachmentContentRef = attachmentContentResponse.getObject().get("_ref").getAsString();

        JsonObject attachment = new JsonObject();
        attachment.addProperty("Artifact", rallyObjectRef);
        attachment.addProperty("Content", attachmentContentRef);
        attachment.addProperty("Name", file.getName());
        attachment.addProperty("ContentType", Files.probeContentType(file.toPath()));
        attachment.addProperty("Size", file.length());

        CreateRequest attachmentRequest = new CreateRequest("Attachment", attachment);
        CreateResponse attachmentResponse = rallyApi.create(attachmentRequest);

        if (attachmentResponse.wasSuccessful()) {
            return attachmentResponse.getObject().get("_ref").getAsString();
        } else {
            logger.error("Failed to upload attachment: " + filePath);
            for (String error : attachmentResponse.getErrors()) {
                logger.error(error);
            }
            return null;
        }
    }

    // Method to attach files to Rally Test Step and return the attachment OIDs
    public List<String> attachFilestoRallyTestStep(String rallyTestStepOID, List<String> filePaths) {
        List<String> testStepAttachmentOIDs = new ArrayList<>();
        RallyRestApi rallyApi = null;
        try {
            rallyApi = new RallyRestApi(new URI(rallyBaseURL), rallyApiKey);
            
            for (String filePath : filePaths) {
                try {
                    String attachmentOID = attachFile(rallyApi, rallyTestStepOID, filePath, "testcasestep");
                    if (attachmentOID != null) {
                        testStepAttachmentOIDs.add(attachmentOID);
                        logger.info("File " + filePath + " is attached to the test step OID " + rallyTestStepOID + " in Rally successfully");
                    }
                } catch (IOException e) {
                    logger.error("File " + filePath + " is not attached to Rally due to IO exception.", e);
                }
            }
        } catch (Exception e) {
            logger.error("Error while attaching files to Rally TestStep", e);
        } finally {
            try {
                if (rallyApi != null) {
                    rallyApi.close();
                }
            } catch (IOException e) {
                logger.error("Rally API resource is not closed due to IO exception.", e);
            }
        }
        return testStepAttachmentOIDs;
    }

    // Existing methods...
}
