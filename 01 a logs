public class Solution {
    public int firstMissingPositive(int[] A) {
        int N = A.length;
        
        // Step 1: Clean the array, replace irrelevant elements with a placeholder (N+1)
        for (int i = 0; i < N; i++) {
            if (A[i] <= 0 || A[i] > N) {
                A[i] = N + 1; // Placeholder for irrelevant numbers
            }
        }
        
        // Step 2: Rearrange the array using the values as indices
        for (int i = 0; i < N; i++) {
            int val = Math.abs(A[i]);
            if (val >= 1 && val <= N) {
                if (A[val - 1] > 0) {
                    A[val - 1] = -A[val - 1]; // Mark as found (using negative values)
                }
            }
        }

        // Step 3: Find the first missing positive number
        for (int i = 0; i < N; i++) {
            if (A[i] > 0) {
                return i + 1; // The smallest missing positive integer
            }
        }

        // Step 4: If all values are found, the missing number is N + 1
        return N + 1;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        
        // Test examples
        int[] A1 = {1, 3, 6, 4, 1, 2};
        System.out.println(solution.firstMissingPositive(A1)); // Output: 5
        
        int[] A2 = {1, 2, 3};
        System.out.println(solution.firstMissingPositive(A2)); // Output: 4
        
        int[] A3 = {-1, -3};
        System.out.println(solution.firstMissingPositive(A3)); // Output: 1
    }
}
