public void migrateTestStepsWithAttachments(String rallyTestCaseOID, List<JiraTestStep> jiraTestSteps, RallyRestApi rallyApi, Map<Integer, List<String>> embeddedAttachmentsMap) {
    for (JiraTestStep jiraTestStep : jiraTestSteps) {
        try {
            int rallyStepIndex = jiraTestStep.getIndex() + 1;  // Adjust the index to start from 1 in Rally

            JsonObject newTestStep = new JsonObject();
            newTestStep.addProperty("TestCase", rallyTestCaseOID);
            newTestStep.addProperty("StepIndex", rallyStepIndex);
            
            // Combine "Step" and "Test Data" fields into the "Input" field in Rally
            String inputField = (jiraTestStep.getStep() != null ? jiraTestStep.getStep() : "") +
                                (jiraTestStep.getTestData() != null ? "\n" + jiraTestStep.getTestData() : "");
            newTestStep.addProperty("Input", inputField);
            
            // Map "Expected Result" field from Jira directly to Rally's "Expected Result"
            newTestStep.addProperty("ExpectedResult", jiraTestStep.getExpectedResult());

            // Handle embedded attachments specific to this test step
            List<String> stepEmbeddedAttachments = embeddedAttachmentsMap.get(jiraTestStep.getIndex());
            if (stepEmbeddedAttachments != null && !stepEmbeddedAttachments.isEmpty()) {
                for (String embeddedPath : stepEmbeddedAttachments) {
                    String[] parts = Paths.get(embeddedPath).getFileName().toString().split("_");
                    if (parts.length >= 4) {
                        int stepNumber = Integer.parseInt(parts[0]);
                        String columnName = parts[3];
                        
                        // Ensure the attachment belongs to the current step based on the step number
                        if (stepNumber == rallyStepIndex) {  // Ensure correct matching of steps
                            String attachmentURL = attachFileToRallyTestCase(rallyApi, rallyTestCaseOID, embeddedPath);
                            String attachmentOID = extractOID(attachmentURL);
                            if (attachmentOID != null) {
                                // Determine whether the attachment belongs to Input or ExpectedResult
                                if (columnName.equalsIgnoreCase("Input") || columnName.equalsIgnoreCase("TestData") || columnName.equalsIgnoreCase("Step")) {
                                    newTestStep.addProperty("Input", newTestStep.get("Input").getAsString() + " <img src='https://rally1.rallydev.com/slm/attachment/" + attachmentOID + "/content'/>");
                                    logger.info("Attachment added to Input field for Test Step " + rallyStepIndex + ": " + embeddedPath);
                                } else if (columnName.equalsIgnoreCase("ExpectedResult")) {
                                    newTestStep.addProperty("ExpectedResult", newTestStep.get("ExpectedResult").getAsString() + " <img src='https://rally1.rallydev.com/slm/attachment/" + attachmentOID + "/content'/>");
                                    logger.info("Attachment added to Expected Result field for Test Step " + rallyStepIndex + ": " + embeddedPath);
                                }
                            }
                        }
                    }
                }
            }

            CreateRequest createRequest = new CreateRequest("TestcaseStep", newTestStep);
            CreateResponse createResponse = rallyApi.create(createRequest);

            if (createResponse.wasSuccessful()) {
                String testStepURL = createResponse.getObject().get("_ref").getAsString();
                String testStepOID = extractOID(testStepURL);
                logger.info("Successfully created test step in Rally with OID: " + testStepOID + " for TestCase: " + rallyTestCaseOID);
            } else {
                logger.error("Failed to create test step in Rally: " + createResponse.getErrors());
            }
        } catch (IOException e) {
            logger.error("Exception occurred while creating test step in Rally", e);
        }
    }
}
