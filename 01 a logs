package com.optum.coe.automation.rally;

import com.google.gson.JsonObject;
import com.rallydev.rest.RallyRestApi;
import com.rallydev.rest.request.GetRequest;
import com.rallydev.rest.request.UpdateRequest;
import com.rallydev.rest.response.GetResponse;
import com.rallydev.rest.response.UpdateResponse;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.util.Arrays;
import java.util.List;

public class RallyOperation {
    private static final Logger logger = LogManager.getLogger(RallyOperation.class);

    // Method to extract the OID from the full URL
    private String extractOID(String fullUrl) {
        // The OID is the last part of the URL after the last '/'
        if (fullUrl != null && fullUrl.contains("/")) {
            return fullUrl.substring(fullUrl.lastIndexOf('/') + 1);
        } else {
            logger.error("Invalid URL format: " + fullUrl);
            return null;
        }
    }

    // Method to verify that an object exists in Rally
    private boolean checkObjectExists(String objectType, String oid, RallyRestApi rallyRestApi) {
        try {
            GetRequest getRequest = new GetRequest("/" + objectType + "/" + oid);
            GetResponse getResponse = rallyRestApi.get(getRequest);
            return getResponse.wasSuccessful();
        } catch (Exception e) {
            logger.error("Error while checking existence of " + objectType + " with OID " + oid, e);
            return false;
        }
    }

    // Updated method to move attachments to test step
    private void moveAttachmentsToTestStep(String rallyTestStepFullUrl, List<String> attachmentOIDs, RallyRestApi rallyRestApi) {
        // Extract the test step OID from the full URL
        String rallyTestStepOID = extractOID(rallyTestStepFullUrl);
        if (rallyTestStepOID == null) {
            logger.error("Failed to extract OID from the test step URL: " + rallyTestStepFullUrl);
            return;
        }

        // Verify that the test step exists in Rally
        if (!checkObjectExists("testcasestep", rallyTestStepOID, rallyRestApi)) {
            logger.error("Test step with OID " + rallyTestStepOID + " does not exist in Rally.");
            return;
        }

        for (String attachmentFullUrl : attachmentOIDs) {
            try {
                // Extract the OID from the full URL
                String attachmentOID = extractOID(attachmentFullUrl);
                if (attachmentOID == null) {
                    logger.error("Failed to extract OID from the attachment URL: " + attachmentFullUrl);
                    continue;
                }

                // Verify that the attachment exists in Rally
                if (!checkObjectExists("attachment", attachmentOID, rallyRestApi)) {
                    logger.error("Attachment with OID " + attachmentOID + " does not exist in Rally.");
                    continue;
                }

                // Fetch the existing attachment details
                GetRequest getRequest = new GetRequest("/attachment/" + attachmentOID);
                GetResponse getResponse = rallyRestApi.get(getRequest);
                
                if (getResponse.wasSuccessful()) {
                    JsonObject attachmentDetails = getResponse.getObject();

                    // Ensure the Artifact field is present in the attachment details
                    if (attachmentDetails.has("Artifact")) {
                        // Update the Artifact field to point to the new Test Step
                        attachmentDetails.addProperty("Artifact", rallyTestStepOID);
                        
                        // Create an UpdateRequest with the updated details
                        UpdateRequest updateRequest = new UpdateRequest("/attachment/" + attachmentOID, attachmentDetails);
                        UpdateResponse updateResponse = rallyRestApi.update(updateRequest);

                        if (updateResponse.wasSuccessful()) {
                            logger.info("Successfully moved attachment OID " + attachmentOID + " to test step " + rallyTestStepOID);
                        } else {
                            logger.error("Failed to move attachment OID " + attachmentOID + " to test step " + rallyTestStepOID + ". Error: " + Arrays.toString(updateResponse.getErrors()));
                        }
                    } else {
                        logger.error("Artifact field not found in attachment details for OID " + attachmentOID);
                    }
                } else {
                    logger.error("Failed to retrieve attachment OID " + attachmentOID + " for updating. Error: " + Arrays.toString(getResponse.getErrors()));
                }
            } catch (Exception e) {
                logger.error("Exception while moving attachment OID " + attachmentFullUrl + " to test step " + rallyTestStepOID, e);
            }
        }
    }

    // Other methods in RallyOperation class...
}
