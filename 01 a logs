To address the issue where the text is being compressed into a single line during migration, it's essential to ensure that the original formatting, particularly the line breaks, is preserved. Here's how you can approach it:

### Updated `removeHtmlTagsAndPreserveWhitespace` Method
```java
private String removeHtmlTagsAndPreserveWhitespace(String input) {
    // Replace <br> and <p> tags with newline characters
    input = input.replaceAll("(?i)<br\\s*/?>", "\n").replaceAll("(?i)<p\\s*/?>", "\n");
    
    // Parse the input with Jsoup and get the text while preserving line breaks
    Document doc = Jsoup.parse(input);
    doc.outputSettings(new Document.OutputSettings().prettyPrint(false)); // Keep line breaks
    doc.select("br").append("\\n"); // Replace <br> with \n
    doc.select("p").prepend("\\n"); // Add \n before <p> tags
    String cleanedText = doc.text().replace("\\n", "\n"); // Replace \\n with actual newlines

    // Replace multiple spaces with a single space to avoid extra spaces
    cleanedText = cleanedText.replaceAll("\\s+", " ");
    
    // Return the cleaned text, preserving the line breaks
    return cleanedText;
}
```

### Key Steps in the Updated Method:
1. **Replace `<br>` and `<p>` Tags with Newline Characters**: This replaces the common line break elements in HTML with actual newlines (`\n`).

2. **Jsoup Parsing with Pretty Print Disabled**: This setting keeps the original line breaks without altering them during parsing.

3. **Manual Handling of Breaks**: We manually append and prepend `\n` to `<br>` and `<p>` tags, ensuring that these elements translate correctly into line breaks in the final text.

4. **Final Cleanup**: The final step ensures that extra spaces are removed, but line breaks are preserved.

### Applying to the Migration Logic:
In your `migrateTestStepsWithAttachments` method, apply this updated `removeHtmlTagsAndPreserveWhitespace` method to both the `inputField` and `expectedResultField`.

### Example Usage:
```java
// In your migrateTestStepsWithAttachments method
String inputField = removeHtmlTagsAndPreserveWhitespace((jiraTestStep.getStep() != null ? jiraTestStep.getStep() : "") +
                                (jiraTestStep.getTestData() != null ? "\n" + jiraTestStep.getTestData() : ""));
String expectedResultField = removeHtmlTagsAndPreserveWhitespace(jiraTestStep.getExpectedResult());

// Apply the same truncation logic if necessary
```

### Testing the Migration:
After implementing this method, run the migration process again and check if the text is now preserving line breaks as expected. This approach should help in maintaining the original formatting of the text, especially for steps where line breaks are crucial for readability. If there are still issues, we might need to further tweak the approach based on the specific HTML structure you're working with.
