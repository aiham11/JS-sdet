public String createRallyTestStep(String rallyTestCaseOID, JsonObject gsonTestStepJson) {
    String rallyTestStepOID = null;
    RallyRestApi restApi = null;

    try {
        restApi = new RallyRestApi(new URI(rallyBaseURL), rallyApiKey);

        // Construct the JsonObject for the test step
        JsonObject newTestStep = new JsonObject();
        newTestStep.addProperty("TestCase", rallyTestCaseOID);
        newTestStep.addProperty("StepIndex", gsonTestStepJson.get("index").getAsInt());
        newTestStep.addProperty("Input", gsonTestStepJson.get("description").getAsString());
        newTestStep.addProperty("ExpectedResult", gsonTestStepJson.get("expectedResult").getAsString());
        newTestStep.addProperty("TestData", gsonTestStepJson.get("testData").getAsString());

        CreateRequest createRequest = new CreateRequest("testcasestep", newTestStep);
        CreateResponse createResponse = restApi.create(createRequest);

        if (createResponse.wasSuccessful()) {
            rallyTestStepOID = createResponse.getObject().get("_ref").getAsString();
            logger.info("Successfully created test step: " + gsonTestStepJson.get("description").getAsString());
        } else {
            logger.error("Error occurred creating test step in Rally.");
            for (String error : createResponse.getErrors()) {
                logger.error(error);
            }
        }
    } catch (Exception e) {
        logger.error("Exception occurred while creating test step in Rally: ", e);
    } finally {
        if (restApi != null) {
            try {
                restApi.close();
            } catch (IOException e) {
                logger.error("Exception occurred while closing Rally REST API: ", e);
            }
        }
    }

    return rallyTestStepOID;
}
