public String fetchJiraNonMigratedTestcases(String jiraApiEndpoint, String jiraApiToken) {
    String jiraResponse = null;

    // Validate the endpoint URL
    if (jiraApiEndpoint == null || jiraApiEndpoint.trim().isEmpty()) {
        logger.error("The Jira API endpoint is null or empty.");
        return null;
    }

    try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
        URI uri = URI.create(jiraApiEndpoint.trim());
        HttpGet request = new HttpGet(uri);
        request.addHeader("Authorization", "Bearer " + jiraApiToken);

        try (CloseableHttpResponse response = httpClient.execute(request)) {
            if (response.getStatusLine().getStatusCode() == 200) {
                HttpEntity entity = response.getEntity();
                if (entity != null) {
                    jiraResponse = EntityUtils.toString(entity);
                    logger.info("Successfully fetched Jira response: " + jiraResponse);
                } else {
                    logger.warn("No content returned in Jira response.");
                }
            } else {
                logger.error("Failed to fetch Jira response. HTTP error code: " + response.getStatusLine().getStatusCode());
            }
        }
    } catch (IOException e) {
        logger.error("Error occurred while fetching non-migrated test cases from Jira.", e);
    } catch (IllegalArgumentException e) {
        logger.error("The Jira API endpoint is improperly formatted: " + jiraApiEndpoint, e);
    }

    return jiraResponse;
}
