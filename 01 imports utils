package com.optum.coe.automation.rally;

import com.rallydev.rest.RallyRestApi;
import com.rallydev.rest.request.CreateRequest;
import com.rallydev.rest.response.CreateResponse;
import com.rallydev.rest.util.Fetch;
import com.rallydev.rest.util.QueryFilter;
import com.google.gson.JsonObject;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.json.JSONObject;

import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;

public class RallyOperation {

    private static final Logger logger = LogManager.getLogger();
    private String rallyBaseURL;
    private String rallyApiKey;

    public RallyOperation() {
        // Load configuration or set defaults
        this.rallyBaseURL = "https://rally1.rallydev.com"; // Replace with your Rally base URL
        this.rallyApiKey = "your-rally-api-key"; // Replace with your Rally API key
    }

    // Method to create a Rally testcase from Jira testcase details
    public String createRallyTestcase(JSONObject jiraTestcaseJson) {
        RallyRestApi restApi = null;
        String rallyTestcaseOID = null;

        try {
            restApi = new RallyRestApi(new URI(rallyBaseURL), rallyApiKey);
            restApi.setApplicationName("CreateTestCaseApp");

            JsonObject newTestcase = new JsonObject();
            newTestcase.addProperty("Name", jiraTestcaseJson.getString("name"));
            newTestcase.addProperty("Description", jiraTestcaseJson.getString("description"));
            // Add other fields as needed from jiraTestcaseJson

            CreateRequest createTestcaseRequest = new CreateRequest("TestCase", newTestcase);
            CreateResponse createTestcaseResponse = restApi.create(createTestcaseRequest);

            if (createTestcaseResponse.wasSuccessful()) {
                rallyTestcaseOID = createTestcaseResponse.getObject().get("_ref").getAsString();
                logger.info("Successfully created testcase in Rally with OID: " + rallyTestcaseOID);
            } else {
                logger.error("Error occurred creating testcase in Rally.");
                for (String error : createTestcaseResponse.getErrors()) {
                    logger.error(error);
                }
            }

        } catch (Exception e) {
            logger.error("Exception occurred while creating testcase in Rally: ", e);
        } finally {
            if (restApi != null) {
                try {
                    restApi.close();
                } catch (Exception e) {
                    logger.error("Exception occurred while closing Rally REST API: ", e);
                }
            }
        }
        return rallyTestcaseOID;
    }

    // Other methods including attachFilestoRallyTestStep and createRallyTestStep...
}
